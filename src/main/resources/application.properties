#----------------------- CONFIGURACIÓN GLOBAL --------------------------------
#Nombre de la aplicación definido.
spring.application.name=Microservicio Spring Boot de Empresa Online.

#----------------------- [64] CONFIGURACIÓN DE  PARA MANEJO DE LOGS --------------
#Para cargar los valores de estas claves creo un paquete llamado configurations y dentro de este un archivo llamada ConfigurationsParameters ==> [65].
#[64.A]Nombre del archivo de logs.
app.nombre=Empresa Online
#[64.B]Idioma de la aplicación.
app.lenguaje=es
#[64.C]País de la aplicación.
app.pais=Colombia
#[64.D]Autor de la aplicación.
app.author=Saul Echeverri
#[64.E]Versión de la aplicación.
app.java.version=${java.version}
#[64.F]Sistema operativo de la aplicación.
app.os.name=${os.name}
#[64.G]Usuario de la aplicación.
app.user.name=${user.name}



#------------------[59]. CONFIGURACIÓN URL -----------------------------------
#server.port=8090 //[59.A]Para cambiar de puerto de arranque.
#[59.B]Nombre base de la URL
#Una práctica sugerida es que la base de nuestra URL este nomenclada por el nombre general de la aplicación y seguido
#por la versión de la API expuesta hasta el momento.
server.servlet.context-path=/enterprise/api/v1

#---------------------- CONFIGURACIÓN BD -------------------------------------
#[1].Configuro la URL de la BD ya que lo inicie con el Spring Initializr.
spring.datasource.url=jdbc:postgresql://localhost:5432/GestionEmpresas
#[2].Configuro nombre de usuario.
spring.datasource.username=postgres
#[3].Configuro el password de la BD.
spring.datasource.password=1234
#[13].Configuración para crear las tablas de los models y poder hacer las persistencias con Hibernate en la BD.
spring.jpa.hibernate.ddl-auto=update


#Si Deseo leer un archivo no de BD sino de un json, lo debo de crear en la carpeta resources y luego crear el un servicio
#altero para permitir la lectura de dicho archivo, hare un ejemplo de esta implementación en productos.json ==> [60].

